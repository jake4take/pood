basePath: /
definitions:
  models.Action:
    properties:
      id:
        type: integer
      name:
        type: string
      subtype:
        type: integer
      template:
        type: boolean
      type:
        type: integer
      unit:
        type: integer
      unit_info:
        $ref: '#/definitions/models.Unit'
    type: object
  models.ActionCreateRequest:
    properties:
      id:
        type: integer
      name:
        type: string
      subtype:
        type: integer
      template:
        type: boolean
      type:
        type: integer
      unit:
        type: integer
    type: object
  models.CreateFileResponse:
    properties:
      create_at:
        type: string
      id:
        type: integer
      name:
        type: string
      path:
        type: string
    type: object
  models.CreateLogRequest:
    properties:
      count:
        type: number
      description:
        type: string
      end_time:
        type: string
      file_ids:
        items:
          type: integer
        type: array
      start_start:
        type: string
      value:
        type: string
    type: object
  models.FailedResponse:
    properties:
      detail:
        type: string
    type: object
  models.File:
    properties:
      create_at:
        type: string
      delete_at:
        type: string
      id:
        type: integer
      log_id:
        type: integer
      name:
        type: string
      path:
        type: string
    type: object
  models.GetStatsResponse:
    properties:
      action:
        $ref: '#/definitions/models.Action'
      count:
        type: integer
      stats:
        items:
          $ref: '#/definitions/models.Log'
        type: array
      user_action_id:
        type: integer
    type: object
  models.Log:
    properties:
      count:
        type: number
      description:
        type: string
      end_time:
        type: string
      files:
        items:
          $ref: '#/definitions/models.File'
        type: array
      id:
        type: integer
      log_date:
        type: string
      start_time:
        type: string
      user_action:
        $ref: '#/definitions/models.UserAction'
      user_action_id:
        type: integer
      user_id:
        type: integer
      value:
        type: string
    type: object
  models.MyActionsResponse:
    properties:
      action:
        properties:
          id:
            type: integer
          name:
            type: string
          subtype:
            type: integer
          type:
            type: integer
          unit_info:
            properties:
              name:
                type: string
            type: object
        type: object
      deleted:
        type: boolean
      id:
        type: integer
      private:
        type: boolean
    type: object
  models.MyActiveActions:
    properties:
      action:
        $ref: '#/definitions/models.Action'
      description:
        type: string
      id:
        type: integer
      start_time:
        type: string
    type: object
  models.PutLogRequest:
    properties:
      count:
        type: number
      description:
        type: string
      end_time:
        type: string
      file_ids:
        items:
          type: integer
        type: array
      start_time:
        type: string
      value:
        type: string
    type: object
  models.SuccessResponse:
    properties:
      detail:
        type: string
    type: object
  models.TypeInfoResponse:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      sub_type:
        items:
          properties:
            description:
              type: string
            id:
              type: integer
            name:
              type: string
          type: object
        type: array
    type: object
  models.Unit:
    properties:
      description:
        type: string
      first_form:
        type: string
      id:
        type: integer
      name:
        type: string
      second_form:
        type: string
      third_form:
        type: string
    type: object
  models.UpdateRequest:
    properties:
      private:
        type: boolean
    type: object
  models.User:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  models.UserAction:
    properties:
      action:
        $ref: '#/definitions/models.Action'
      action_id:
        type: integer
      deleted:
        type: boolean
      id:
        type: integer
      logs:
        items:
          $ref: '#/definitions/models.Log'
        type: array
      private:
        type: boolean
      user:
        $ref: '#/definitions/models.User'
      user_id:
        type: integer
    type: object
  models.UserActionsResponse:
    properties:
      action:
        properties:
          id:
            type: integer
          name:
            type: string
          subtype:
            type: integer
          type:
            type: integer
          unit_info:
            properties:
              name:
                type: string
            type: object
        type: object
      id:
        type: integer
      user_id:
        type: integer
    type: object
info:
  contact: {}
  title: Pood - just pood)
  version: 1.0.0
paths:
  /action:
    post:
      consumes:
      - application/json
      description: |-
        Создать новый action и привязаться к нему по токену
        - привязка по **id** или создание по остальным полям
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.ActionCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.FailedResponse'
      security:
      - ApiKeyAuth: []
      summary: Создать новый action
      tags:
      - Actions
  /actions:
    get:
      consumes:
      - application/json
      parameters:
      - description: name
        in: query
        name: name
        type: string
      - description: template
        in: query
        name: template
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Action'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.FailedResponse'
      security:
      - ApiKeyAuth: []
      summary: Найти action по неполному совпадению имени
      tags:
      - Actions
  /file:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: binary
        in: formData
        name: file
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.CreateFileResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.FailedResponse'
      security:
      - ApiKeyAuth: []
      summary: Загрузить файл
      tags:
      - Files
  /file/{id}:
    delete:
      consumes:
      - application/json
      description: Удалить file по id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.FailedResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.FailedResponse'
      security:
      - ApiKeyAuth: []
      summary: Удалить file
      tags:
      - Files
  /log/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.PutLogRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                properties:
                  count:
                    type: number
                  description:
                    type: string
                  end_time:
                    type: string
                  files:
                    items:
                      $ref: '#/definitions/models.File'
                    type: array
                  id:
                    type: integer
                  log_date:
                    type: string
                  start_time:
                    type: string
                  user_action_id:
                    type: integer
                  value:
                    type: string
                type: object
              type: array
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.FailedResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.FailedResponse'
      security:
      - ApiKeyAuth: []
      summary: Изменить лог
      tags:
      - Logs
  /logs/my:
    get:
      consumes:
      - application/json
      parameters:
      - description: field[eq]
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                properties:
                  count:
                    type: number
                  description:
                    type: string
                  end_time:
                    type: string
                  files:
                    items:
                      $ref: '#/definitions/models.File'
                    type: array
                  id:
                    type: integer
                  log_date:
                    type: string
                  start_time:
                    type: string
                  user_action_id:
                    type: integer
                  value:
                    type: string
                type: object
              type: array
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.FailedResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.FailedResponse'
      security:
      - ApiKeyAuth: []
      summary: Получить мои действия
      tags:
      - Logs
  /typeInfo:
    get:
      consumes:
      - application/json
      description: Получить описание типов и вложеннымх в него сабтипов
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TypeInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.FailedResponse'
      security:
      - ApiKeyAuth: []
      summary: Получить информацию по типам
      tags:
      - TypeInfo
  /unitInfo:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Unit'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.FailedResponse'
      security:
      - ApiKeyAuth: []
      summary: Единицы измерения
      tags:
      - TypeInfo
  /user/{id}/actions:
    get:
      consumes:
      - application/json
      description: Получить userActions юзера (private=false) по id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.UserActionsResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.FailedResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.FailedResponse'
      security:
      - ApiKeyAuth: []
      summary: Получить userActions юзера (private=false)
      tags:
      - Users
  /userAction/{id}:
    delete:
      consumes:
      - application/json
      description: Удалить userAction по id по токену
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.FailedResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.FailedResponse'
      security:
      - ApiKeyAuth: []
      summary: Удалить userAction
      tags:
      - UserActions
  /userAction/{id}/done:
    post:
      consumes:
      - application/json
      description: '**If action.type = 3**, field count *float* is required;'
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.CreateLogRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.FailedResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.FailedResponse'
      security:
      - ApiKeyAuth: []
      summary: Сделал action
      tags:
      - UserActions
  /userAction/{id}/private:
    put:
      consumes:
      - application/json
      description: Редактировать userAction по id по токену
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.UpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.FailedResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.FailedResponse'
      security:
      - ApiKeyAuth: []
      summary: Редактировать userAction
      tags:
      - UserActions
  /userAction/{id}/stats:
    get:
      consumes:
      - application/json
      description: Получить статистику по id action по токену
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: date
        in: query
        name: filter[log_date][gte]
        type: string
      - description: date
        in: query
        name: filter[log_date][lte]
        type: string
      - description: field[eq]
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.GetStatsResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.FailedResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.FailedResponse'
      security:
      - ApiKeyAuth: []
      summary: Получить статистику
      tags:
      - UserActions
  /userActions/my:
    get:
      consumes:
      - application/json
      description: Получить мои actions по токену
      parameters:
      - description: deleted
        in: query
        name: deleted
        type: boolean
      - description: field[eq]
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.MyActionsResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.FailedResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.FailedResponse'
      security:
      - ApiKeyAuth: []
      summary: Получить мои actions
      tags:
      - UserActions
  /userActions/my/active:
    get:
      consumes:
      - application/json
      description: Получить мои активные actions с типом интервал по токену
      parameters:
      - description: deleted
        in: query
        name: deleted
        type: boolean
      - description: field[eq]
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.MyActiveActions'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.FailedResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.FailedResponse'
      security:
      - ApiKeyAuth: []
      summary: Получить мои активные actions с типом интервал
      tags:
      - UserActions
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
